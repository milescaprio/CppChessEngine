#define ENDGAME 0
#define MIDDLEGAME 25
#define OPENING 75
const evaltype PAWNDEFENSESCORE[] = { 0, 20, 15, 15, 5, 5, 0, 0, 0 }; //for use to be indexed with pieceidtype Piece::getNeutralPiece(). Last two indices shouldn't be touched.
const evaltype PAWNDOUBLEDSCORE[] = { 0, 0, -40, -90, -140, -200, -260, -330, -400 }; //for use to be indexed with pieceidtype Piece::getNeutralPiece(). Last two indices shouldn't be touched in practicality. //updated to be cumulative
const squaretype MIDDLEGAMEDILUTION = 2;
const evaltype OPENINGQUEENPENALTY = -35;
namespace BONUSCALC {
	evaltype openingweight(evaltype whitematerial, evaltype blackmaterial) {
		return ((min(whitematerial, blackmaterial) - piecescores[K]) * 100 / (CHESSMATERIAL - piecescores[K])); // a percentage, to determine how to weigh positional advantages. Used to be analog but to reduce complexity and improve efficiency is now seperated into opening, middlegame, and endgame. //BUG!! CHESSMATERIAL was including the king material
	}
	squaretype stage(evaltype openingweight) {
		return/*using squaretype in general as a variable that goes from at least0-63 so this fits*/openingweight > OPENING ? 1 : (openingweight > MIDDLEGAME ? 2 : 3);
	}
	squaretype stage(evaltype whitematerial, evaltype blackmaterial) {
		evaltype openingweight = BONUSCALC::openingweight(whitematerial, blackmaterial);
		return openingweight > OPENING ? 1 : (openingweight > MIDDLEGAME ? 2 : 3);
	}
	squaretype touchingdistance(squaretype rowa, squaretype cola, squaretype rowb, squaretype colb) {
		squaretype rowdist = max(rowa, rowb) - min(rowa, rowb);
		squaretype coldist = max(cola, colb) - min(cola, colb);
		return rowdist - (rowdist != 0) + coldist - (coldist != 0); //the -1's and max's are so it determines the distance to the nearest touching square
	}
	squaretype touchingdistance(squaretype multa, squaretype multb) {
		return BONUSCALC::touchingdistance(multrow(multa), multcol(multa), multrow(multb), multcol(multb));
	}
}
namespace PLACEMENT {
	const evaltype PAWNOPENING[8][8] =
	{ {0, 5, 10, 15, 15, 10, 5, 0},
	{ 5,10,15,20,20,15,10,5 },
	{ 10,15,20,25,25,20,15,10 },
	{ 15,20,25,30,30,25,20,15 },
	{ 15,20,25,30,30,25,20,15 },
	{ 10,15,20,25,25,20,15,10 },
	{ 5,10,15,20,20,15,10,5 },
	{ 0,5,10,15,15,10,5,0 } };
	const evaltype PAWNENDGAME[8][8] =
	{ {70, 70, 70, 70, 70, 70, 70, 70},
	{ 60,60,60,60,60,60,60,60 },
	{ 50,50,50,50,50,50,50,50 },
	{ 40,40,40,40,40,40,40,40 },
	{ 30,30,30,30,30,30,30,30 },
	{ 20,20,20,20,20,20,20,20 },
	{ 10,10,10,10,10,10,10,10 },
	{ 0,0,0,0,0,0,0,0 }
	};
	const evaltype KINGENDGAME[8][8] =
	{ {0, 15, 30, 45, 45, 30, 15, 0},
	{ 15,30,45,60,60,45,30,15 },
	{ 30,45,60,75,75,60,45,30 },
	{ 45,60,75,90,90,75,60,45 },
	{ 45,60,75,90,90,75,60,45 },
	{ 30,45,60,75,75,60,45,30 },
	{ 15,30,45,60,60,45,30,15 },
	{ 0,15,30,45,45,30,15,0 }
	};
	const evaltype KINGOPENING[8][8] =
	{ {60, 40, 20, 0, 0, 20, 40, 60},
	{ 80,60,40,20,20,40,60,80 },
	{ 100,80,60,40,40,60,80,100 },
	{ 120,100,80,60,60,80,100,120 },
	{ 140,120,100,80,80,100,120,140 },
	{ 160,140,120,100,100,120,140,160 },
	{ 180,160,140,120,120,140,160,180 },
	{ 200,180,160,140,140,160,180,200 }
	};
	const evaltype KNIGHTOPENING[8][8] =
	{ {10, 15, 20, 20, 20, 20, 15, 10},
	{ 15,20,30,30,30,30,20,15 },
	{ 20,30,40,40,40,40,30,20 },
	{ 20,30,40,40,40,40,30,20 },
	{ 20,30,40,40,40,40,30,20 },
	{ 20,30,40,40,40,40,30,20 },
	{ 15,20,30,30,30,30,20,15 },
	{ 10,15,20,20,20,20,15,10 }
	};
	const evaltype KNIGHTENDGAME[8][8] =
	{ {10, 15, 20, 20, 20, 20, 15, 10},
	{ 15,20,30,30,30,30,20,15 },
	{ 20,30,40,40,40,40,30,20 },
	{ 20,30,40,40,40,40,30,20 },
	{ 20,30,40,40,40,40,30,20 },
	{ 20,30,40,40,40,40,30,20 },
	{ 15,20,30,30,30,30,20,15 },
	{ 10,15,20,20,20,20,15,10 }
	};
	const evaltype QUEENOPENING[8][8] =
	{ {10, 15, 20, 20, 20, 20, 15, 10},
	{ 15,20,30,30,30,30,20,15 },
	{ 20,30,40,40,40,40,30,20 },
	{ 20,30,40,40,40,40,30,20 },
	{ 20,30,40,40,40,40,30,20 },
	{ 20,30,40,40,40,40,30,20 },
	{ 15,20,30,30,30,30,20,15 },
	{ 10,15,20,20,20,20,15,10 }
	};
	const evaltype QUEENENDGAME[8][8] =
	{ {10, 15, 20, 20, 20, 20, 15, 10},
	{ 15,20,30,30,30,30,20,15 },
	{ 20,30,40,40,40,40,30,20 },
	{ 20,30,40,40,40,40,30,20 },
	{ 20,30,40,40,40,40,30,20 },
	{ 20,30,40,40,40,40,30,20 },
	{ 15,20,30,30,30,30,20,15 },
	{ 10,15,20,20,20,20,15,10 }
	};
	const evaltype BISHOPOPENING[8][8] =
	{ {7, 0, 0, 0, 0, 0, 0, 7},
	{ 0,11,0,0,0,0,11,0 },
	{ 0,0,15,0,0,15,0,0 },
	{ 0,0,0,19,19,0,0,0 },
	{ 0,0,0,23,23,0,0,0 },
	{ 0,0,27,0,0,27,0,0 },
	{ 0,31,0,0,0,0,31,0 },
	{ 35,0,0,0,0,0,0,35 }
	};
	const evaltype BISHOPENDGAME[8][8] =
	{ {7, 0, 0, 0, 0, 0, 0, 7},
	{ 0,11,0,0,0,0,11,0 },
	{ 0,0,15,0,0,15,0,0 },
	{ 0,0,0,19,19,0,0,0 },
	{ 0,0,0,23,23,0,0,0 },
	{ 0,0,27,0,0,27,0,0 },
	{ 0,31,0,0,0,0,31,0 },
	{ 35,0,0,0,0,0,0,35 }
	};
	const evaltype ROOKOPENING[8][8] =
	{ {0, 10, 20, 30, 30, 20, 10, 0},
	{ 60,60,60,60,60,60,60,60 },
	{ 10,20,30,40,40,30,20,10 },
	{ 10,20,30,40,40,30,20,10 },
	{ 20,30,40,50,50,40,30,20 },
	{ 20,30,40,50,50,40,30,20 },
	{ 30,40,50,60,60,50,40,30 },
	{ 30,40,50,60,60,50,40,30 }
	};
	evaltype squarebonus(bool color, squaretype row, squaretype col, pieceidtype piece, squaretype stage) {/*using squaretype in general as a variable that goes from at least0-63 so this fits*/
		switch (piece) {
		case p:
		case P:
			return stage == 1 ? PAWNOPENING[color ? row : 7 - row][col] : (stage == 2 ? PAWNOPENING[color ? row : 7 - row][col] / MIDDLEGAMEDILUTION : PAWNENDGAME[color ? row : 7 - row][col]);
			break;
		case n:
		case N:
			return stage == 1 ? KNIGHTOPENING[color ? row : 7 - row][col] : (stage == 2 ? KNIGHTOPENING[color ? row : 7 - row][col] / 2 : KNIGHTENDGAME[color ? row : 7 - row][col]);
			break;
		case b:
		case B:
			return stage == 1 ? BISHOPOPENING[color ? row : 7 - row][col] : (stage == 2 ? BISHOPOPENING[color ? row : 7 - row][col] / 2 : BISHOPENDGAME[color ? row : 7 - row][col]);
			break;
		case r:
		case R:
			return stage == 1 ? ROOKOPENING[color ? row : 7 - row][col] : (stage == 2 ? ROOKOPENING[color ? row : 7 - row][col] / 2 : 0);
			break;
		case q:
		case Q:
			return stage == 1 ? (multindex(row, col) == (color ? 59 : 3) ? 0 : OPENINGQUEENPENALTY) + QUEENOPENING[color ? row : 7 - row][col] : (stage == 2 ? QUEENOPENING[color ? row : 7 - row][col] / 2 : QUEENENDGAME[color ? row : 7 - row][col]); //fixed bug where all squares were penalized for queen during opening, is now only penalties on squares besides starting square
			break;
		case k:
		case K:
			return stage == 1 ? KINGOPENING[color ? row : 7 - row][col] : (stage == 2 ? KINGOPENING[color ? row : 7 - row][col] / 2 : KINGENDGAME[color ? row : 7 - row][col]);
			break;
		default:
			return 0;
		};
	}
}

namespace KINGSAFETY {
	//King Safety Algorithm is determined with the NUMBER OF SQUARES FROM A SQUARE TOUCHING THE KING AND THE SQUARE THE PIECE IS ON. Then the bonus is indexed and given
	const evaltype PAWN[3/*stage*/][3/*dist*/] = { {40, 40, 10}, {40, 40, 10}, {0, 0, 0} };
	const evaltype KNIGHT[3/*stage*/][3/*dist*/] = { {30, 30, 20}, {30, 30, 20}, {0, 0, 0} };
	const evaltype BISHOP[3/*stage*/][3/*dist*/] = { {30, 30, 10}, {30, 30, 10}, {0, 0, 0} };
	const evaltype ROOK[3/*stage*/][3/*dist*/] = { {20, 20, 10}, {20, 20, 10}, {0, 0, 0} };
	const evaltype QUEEN[3/*stage*/][3/*dist*/] = { {10, 10, 5}, {10, 10, 5}, {0, 0, 0} };

	evaltype squarebonus(bool color, squaretype kinglocation, squaretype row, squaretype col, pieceidtype piece, squaretype stage) {/*using squaretype in general as a variable that goes from at least0-63 so this fits*/
		squaretype touchingdistance = BONUSCALC::touchingdistance(multrow(kinglocation), multcol(kinglocation), row, col);
		if (touchingdistance > 2) touchingdistance = 2;
		switch (piece) {
		case p:
		case P:
			return PAWN[stage][touchingdistance];
			break;
		case n:
		case N:
			return KNIGHT[stage][touchingdistance];
			break;
		case b:
		case B:
			return BISHOP[stage][touchingdistance];
			break;
		case r:
		case R:
			return ROOK[stage][touchingdistance];
			break;
		case q:
		case Q:
			return QUEEN[stage][touchingdistance];
			break;
		case k:
		case K:
		default:
			return 0;
		};
	}
}

namespace HASHKEYS {
	const hashtype MASTERHASH[2][6][64] = { { {4661500248608102697,
8031492003125562778,
7087406897447275469,
13000367219477148349,
13101923327274117721,
16888093253777395424,
17159556609663084403,
14215345665987709572,
581717590714136886,
5397218157211101075,
14607225340324470224,
337394200261357306,
13992751350229844771,
5431790947185022167,
16772658341107876175,
12443998300002082354,
12050918985758502979,
10551771148643725313,
1590371621864217131,
2028815482641393694,
7700347103693228965,
10173874312012763464,
1217301930295101263,
12900941231616771010,
16973078878966966339,
7911077768966531113,
13963512294802660647,
8075604624033527772,
10568689270002436948,
47011403237094806,
15854144745502465204,
13271761725136905895,
10746729156977184069,
10669520210413212541,
9019795959494844346,
4713778848951777886,
8361666100568492630,
15884169469021458048,
10637953567741401372,
6401094531912633317,
10605828990513815568,
5509007697780379291,
791166740602027551,
17894192120994657339,
15070677222055521838,
16992736055533774572,
6112343804300247207,
11589496861793860063,
4439319815165930081,
3841315294667115296,
16922785118870443144,
965263660682832775,
18319146142425666152,
6735345268543589717,
18396975928288841568,
3083902021466703388,
2341217337017182662,
13464549860621172750,
1915994502325087479,
3290838857522378190,
4955705817170053190,
5112738767852112190,
10613136317609628004,
3424715713689006727},
{9797858211142339827,
5912420594059907509,
1198504475438040035,
6205802950105383714,
1883126145190170036,
14159027842910462169,
3823774495924471174,
12153776770328849674,
5127271064179078050,
10778501267444399766,
9061162673254531643,
12210121651530248157,
4229306825593762167,
5429538205570332426,
16458731522695876365,
3245308163641884020,
13431036541783021662,
8976389459630481051,
10867629367830117794,
720306153895489884,
3637520018428930961,
11972586605285221190,
6640864109125255542,
925601412571161502,
15404936677743568980,
14584798597261851653,
14154260320248739899,
17939221227198803734,
7641824054245278112,
8608725220487769098,
1894190711741354563,
4380986105309313990,
15315840754982622704,
104927781405738943,
3321844900042769156,
13089268058491197058,
17285426897660775235,
12732395681835242311,
14301218608225860827,
3287841618100565580,
6019017414075195391,
17052776688101643985,
425043963950487371,
10540889003816711426,
5189845210713287784,
751047729436795257,
17802362911972285066,
15229795789231156037,
10327053891305541765,
8811661158983896760,
5667399276907930492,
12192074415696932373,
13250335627695526991,
3761806426199138501,
2976115922348823778,
7032728357508504452,
11078125841457503476,
10747566877784923412,
16675516085979603717,
3273326882681028059,
14583416505428361686,
17801456464748600404,
11109764972823949967,
14230314279751428833},
{11981038829247457662,
9799008951778850826,
9661369767514224557,
1635384774724892074,
10506080284834901918,
8313605915197783290,
2956148332667637881,
7577932732607860062,
17132852505891563898,
6248140523842622497,
4353225283183258735,
14416492157670552035,
6264584749239191466,
14868765173436811790,
9796743731296200328,
15694363439713685995,
7548982183220869228,
13080767962942240550,
17119330308353258515,
4752772718120317113,
6853491351215055208,
15867221032732002247,
9016763645063650573,
4246893842884613791,
5531488032480044548,
15361476216868277513,
1336355154996029311,
16813874758007874155,
8495335321758050593,
16874511101781011056,
465175895713032415,
15824761057054548718,
7361537426641670912,
17381930410584366220,
13326614298291955780,
18267438233690609013,
12595480143139201654,
13143400289345434780,
12909601747264476067,
15250326792937548957,
2281493849218195743,
6850118872591091644,
8843856774050871569,
16189030863418128353,
16035080571573217287,
1743066889735644982,
10278520996166978181,
9228486225427141707,
10093233146497426088,
11298127755646153446,
5564303422317723903,
3853172084962466750,
64176172415866954,
8690572482637636045,
15895834043955141315,
4434209622616665550,
2365685114055233155,
15079939089517828445,
13310642875761546158,
6483290092638535636,
2087991778853482147,
181270533938095615,
14529607081055699918,
5032235690922840657},
{13669475706730038297,
11579181455540988045,
154900996908237742,
11541074992979218529,
2609133928604807612,
1886875402630178121,
2359217749027645168,
9507415307652884615,
12541007059363321192,
12511248124964427469,
18111119119746207199,
17161470724071897884,
10044285261171504360,
772420756288915453,
8487004179412585325,
7034217560924598171,
1497213746069598960,
13903712235041830616,
9182399724395727459,
9340800564246419085,
6622919197365205832,
5648121587691900217,
14750799303732791205,
16677391498807688956,
2534373910935177328,
5587511131604339024,
7911696035445278108,
14090617812276887157,
6301291241304386555,
5485606661785357374,
14830932634575996484,
6871453779677760415,
9208926099065155203,
5162890452584903455,
12373025938861154657,
6896077706762750762,
15046696379973425764,
11858792181878926842,
5712042939799487529,
9794814794833368433,
2226554865085187309,
10248945037291013840,
1773492526718984803,
17994335987126184121,
5278849447436054349,
4809430197286738701,
10180721484818997759,
16185583902175646506,
3833290186326299847,
15813638450202528269,
14713451695639516223,
10208142143813351282,
6166518019527370936,
7322240372577042525,
5863308436992763786,
3330803756780635729,
15649455984441991041,
12283842575356260808,
5547144626307680132,
3534579403543602111,
2195757311317554275,
1434861903507594017,
17933187021632089406,
11228363391676854136},
{650144823493632864,
15480400050689704788,
14650343396440862074,
4721118620955316517,
9153427268046504036,
316667972747532398,
13900516390206958000,
12386510003377974029,
3385114015971337740,
5686698539739435246,
15134850844331762380,
1460366037928316198,
6113333271422474832,
13332275944147265971,
15236561722611467835,
17831150112962134577,
10432148566013243336,
10628517361847232201,
9219136691155622788,
6776171767706486821,
14149500863534230005,
1727659306054190894,
6146747322997389813,
4964608929967996558,
15024887598527719130,
16427723038075305284,
4309317108148371084,
17330886653679865035,
6178426534230538712,
9123157793974807441,
2225853899753865048,
16610398017469585492,
6205584918033924082,
15308017599815127221,
3430141166760937775,
2224905823752496081,
10291490472128580304,
18271608135914962668,
9883511000498570843,
908950890767447734,
16190844017097641025,
5925625910912235668,
7933012753436804844,
17661483337091696120,
6100676624913247819,
1615556169531863853,
2268076241452254515,
16783669781216076457,
15197712049644707562,
10369184829895189353,
9468545003876966988,
9760443441669948937,
8266956685106791423,
13278347287142691458,
10797950903170834460,
18217870002266016020,
8085801847463236686,
7421312699335948868,
3691564034830240710,
11878798702316169515,
5011733811286046146,
6140233637859473820,
1014893297951212655,
18386424064050238964},
{14253437697553369516,
8404328140175624591,
17380417909967272238,
2074977464935211200,
12868918122255350121,
12002177725753860239,
4450738743093645779,
7685374539100087908,
11486736560803440148,
5929541840723642266,
17177586807235810419,
16433052363442407219,
105144804086424850,
5614258855253447194,
16027221112936500084,
17518142530025806762,
14094388240655101123,
17809075787712128872,
212900983850551863,
705876329941720127,
15918464766657333215,
1950834092270039108,
9956436735772365461,
6365739780028800324,
9040690765512598445,
4421096521076141797,
14658959512048508381,
15238605796221933451,
3156180860412639156,
5045252539956488638,
9712272729447606246,
4150655157099233233,
16803507838932475858,
2452515286465494835,
6001787657959640214,
18414107345505384851,
3853126310694051954,
2193215684322478442,
15167493554377041074,
1340366281258514156,
5784611393167974404,
16108830246990651166,
12670087229063966392,
733093231659498423,
395729338843204415,
2843086760410140892,
6373973408295686681,
3125678271675824053,
11886495402263289650,
8668605336315444835,
1632105477912135626,
1961753782616668960,
7042360844366786313,
16042638641532556874,
10179626135116304909,
16598882006090159241,
15183518695989380359,
9498144431093125393,
8615810434857968772,
18382352656250888213,
14231675522410434222,
16616674492703185751,
12617931857704933184,
17338362204872380172 } },
	{ {8452910707091569003,
	13688560568374936992,
	13510840810076925137,
	14714289368476593738,
	4488103357812758397,
	5656261735543372878,
	13652371855984667828,
	6695730556693652865,
	8757572762339863471,
	5047969180883147971,
	12000805250463927522,
	17832349036672467567,
	4217623441038544564,
	2681288585891296050,
	3381350533124467209,
	1737735911806548769,
	10741031347248015945,
	15111010720287109174,
	338123940128171780,
	18035602587558219733,
	6600189547479221058,
	7105081292335638044,
	10001725181364730973,
	14028920123312753442,
	2852336284961928834,
	13067536344103846221,
	10600403161024364973,
	1368652491824329139,
	9801137337622083594,
	9603475789170006377,
	2021418145783650285,
	3531322966441260686,
	4727677945800950120,
	17412256297189296320,
	8056569829957074710,
	17442941386928438995,
	14006894865845637315,
	115976603243180641,
	11865189596903845272,
	7925382125583165421,
	1601431608781838033,
	16513714353700177003,
	9660262132100270349,
	12917222923153235813,
	1166027897796389085,
	12436026754825862084,
	15767204506009205585,
	11701228134515461778,
	3515220905097874766,
	14125637082990309191,
	11760819713529693821,
	5693791810912590849,
	2401491504525542150,
	12621237700164897019,
	12545777615453439761,
	2030795609487478121,
	17862255086530014971,
	13745411014693486092,
	16192177239556374759,
	13770759806242370799,
	3567116655526132244,
	13643359304460644541,
	12941375393622182876,
	5697844665343509541},
	{11840199944798025998,
	15320108441703253422,
	16449261234622682270,
	18121639292980849660,
	11856187264142651113,
	7338748154065373632,
	14340169297357315788,
	3610909586707808536,
	5416359873386125348,
	18023122345838144577,
	1130776384997799349,
	10160912358290950295,
	11853013191697092912,
	5872701163201380079,
	14222701744743045855,
	14225767926955724686,
	11201951469785641597,
	8408923428813244895,
	1820178234137909781,
	6456841808513621137,
	16995217011332107607,
	5500653156050376157,
	5922389549163302422,
	458961765535484021,
	5557302479110301228,
	933349147565683812,
	1341562702946252020,
	6145668703359454867,
	9340547257764643723,
	13096296739900116909,
	5019403318981549981,
	7115576745778562857,
	8860085723707683982,
	1315249069493217616,
	10416079908802451199,
	14467689612887221063,
	11942558394416041728,
	8280467931383140005,
	8127892236148535291,
	2933223329843169357,
	8522415672777140892,
	17464556011107974566,
	4911455261940132666,
	7868580809000062012,
	13558986567032815585,
	4433671783706709784,
	6566411989562845635,
	13818214917606868998,
	8534814045223455271,
	5727172109445287159,
	5261182763441372423,
	17807223287001388897,
	6726694046802064579,
	61578460512962542,
	11207623834477635810,
	15178481257262583049,
	2796951942785337443,
	2492231433845111732,
	3617051480583257501,
	3187249985082921814,
	1544532709173916164,
	864399769634328830,
	7065732103688926120,
	7161218089623497339},
	{16503456766003233205,
	6606796227633437069,
	8312854160304846740,
	10794760458895279366,
	3571748728780694995,
	15821186504850669326,
	13493200487179908592,
	6318340979216865208,
	16978802739490533544,
	592556515539428393,
	4621647261171934760,
	17179489802925369615,
	7406172746643740280,
	8828632102959596252,
	12732284449748480541,
	17290303490524454177,
	7389381029362630441,
	4308634326310345950,
	121789689267641531,
	5232101813155221733,
	16974792786297437116,
	11690947169928155758,
	7941378279008440783,
	16145980027434189323,
	9110745125792788586,
	16752580350854408306,
	4490818270663334270,
	18352042296083669080,
	12259047726041085326,
	10193518713042017258,
	6659458982930959636,
	9837010172286943164,
	16658980979168731892,
	5013321762067232411,
	78087699471729937,
	472638177329665202,
	1622346419174360544,
	17252699205875591332,
	17554013764983273595,
	14560908211712944332,
	3907274004830631065,
	7694133470660934465,
	7675853919499563156,
	7512868114115188281,
	3857005891758695369,
	14139690577045194360,
	12329096026571155990,
	5089497059996421258,
	10751799544118448227,
	192051297342567645,
	6950078728705016043,
	272515221714329607,
	5536943470601335572,
	5288218096279571142,
	16427230501941472894,
	6456368671979824957,
	2297143900749980348,
	8503340222373961046,
	4188309231075466496,
	7596594582701675241,
	9926133629232594568,
	14718895188133345522,
	16789369323847357261,
	9854482051228075637},
	{5943231542945065947,
	3549955975281507557,
	3515615170081815071,
	260804885705681628,
	8956781579069035708,
	16777010126036713244,
	10648718927452522585,
	18392172953350429681,
	227087898518643971,
	1162106952053046868,
	3344796759073315382,
	8667065300762208129,
	1377250129034668989,
	2909904347165953902,
	15851504210746321875,
	10822241217338051763,
	9485777879172993580,
	8212415982072890614,
	6409317644331953587,
	13198372218008353481,
	177726777832672496,
	15031744136020542771,
	11780611056000926496,
	14528093325991713186,
	12556594695921755849,
	11713218647373846214,
	9411774828926355364,
	2249826432163795186,
	3415115572769856029,
	13935533401577121771,
	2828003053079283855,
	14158121439563862727,
	686181907873880504,
	16904837146962021117,
	18407615050291519924,
	8623626799236575365,
	4204813571633602330,
	7849261683773362382,
	8981174476775167148,
	15338266900496724685,
	10565420148118992943,
	15210172274404109940,
	6761430024254875457,
	15278150571143467201,
	6010618406173435371,
	11603935486605065088,
	774490417910242021,
	6590792405853720754,
	9444628584194556742,
	2017750376426904099,
	9332465097558409278,
	4678529707206272596,
	11199926045833701479,
	13863892326697079199,
	10598554129094664818,
	9748147425915914019,
	12406461513556337492,
	10514684123581035523,
	6724491011984348485,
	2380468965170554796,
	12567310462110649530,
	9755432745180053980,
	2519150478797978532,
	13317405184266132153},
	{17555676952795928509,
	4351139980505376548,
	2469450446429186636,
	10925012923620403472,
	14521533125820318743,
	5273203096102071703,
	11708529542494148957,
	13373231348500433338,
	17584435498821101857,
	3584623436269583584,
	15313182170571110071,
	17286606314035803677,
	10125161158317654780,
	9453141795792488991,
	5061098229582109029,
	12629162498206434548,
	6447712623231346916,
	8418269636668665867,
	8892908533059752971,
	14021318270597732840,
	2165121776020869194,
	9653041362060489297,
	11469312551630681310,
	4853638608816036623,
	16395986957716928826,
	3742674937725815267,
	15102980299582578151,
	10697723746720200453,
	8380675125042126810,
	6052891727564438566,
	1157079001324384097,
	6527902510789966567,
	126557286334808176,
	3651950478650592040,
	18222352536440937096,
	13447720322322800366,
	14626706428402456921,
	15339011490695872354,
	16881595864334136678,
	16942505275011699845,
	15069931429548694275,
	4618733302636020759,
	6027910165858097128,
	6439934366112056183,
	17991866615968762194,
	2252862377424817901,
	15452777835579214569,
	16814243522096087608,
	8541004797718595286,
	3917788027699724867,
	11131170226241617757,
	10936866914476441008,
	7863827361684930498,
	8582724693800031755,
	7037168229850071043,
	12338033947642194115,
	3315158630063551191,
	8126715699497765083,
	16691835678086922573,
	2568613675174074738,
	407157986156636928,
	8660850963017622488,
	5970304133067053382,
	1723102945900319783},
	{28696723021960329,
	14361597773640574920,
	7404337068004127519,
	824691102840634581,
	10947665380170363632,
	11649640035305470614,
	3262704079219291012,
	6265604967884656247,
	15471374092691113461,
	2946826275682152954,
	16538596779345895575,
	16113113454788698905,
	16774023530713518141,
	13775684691253770641,
	10576576872912503137,
	7011517732427610475,
	7583668809832398477,
	11146601778811708757,
	18172453316040435857,
	1342644397530499781,
	7748075467811889942,
	4557477189177988526,
	14393064870570415788,
	380990746120511087,
	7774059919860044576,
	7641048934281408834,
	15875460056363347157,
	7985173600473423464,
	6983035082914297696,
	12110755959384838569,
	13871780344019477190,
	1749855194600053507,
	18024860305336315189,
	2144673387660659154,
	3023902085335827734,
	14743296211908518400,
	16493499156840745452,
	4355376084926307243,
	7413650279238211916,
	13649356572388411047,
	6403028027717066218,
	7050119520308887419,
	5999951679821956529,
	6820280449485296105,
	681489094768999322,
	17703818664637684870,
	14838723609188640336,
	6468342699816239293,
	663936666305175009,
	13805487175289278852,
	15348953499113004176,
	1667241664150714041,
	17703801970742129000,
	10592454426274881486,
	5867497683995882204,
	4637808577675070121,
	14138528522900699633,
	4109423551534682151,
	9508090884335043203,
	1192500319823493588,
	12459357058665085097,
	5084573331855150975,
	7411395536544310483,
	2735214462645934762} }
	};

	const hashtype turnHash = 14578586879391272405;
	const hashtype doneCastlingHash[4] = { 9347697073585520030,4434907013391238810,8917105570804324982,3423536431298004303 };

	hashtype newHash(const Game& game, const Move& move, bool isQueenCastle, bool isKingCastle, hashtype oldHash) { //passing if is castle to save time for a condition already searched

		//assuming the game provided is BEFORE the move happens, this function inputs the old hash of the board and then returns a new hash.
		bool color = game.getSquare(move.getSource()).getColor();
		hashtype ret = oldHash;
		ret = ret ^ turnHash;
		ret = ret ^ MASTERHASH[color][game.getSquare(move.getSource()).getNeutralPiece() - 1][move.getSource()];
		ret = ret ^ MASTERHASH[color][game.getSquare(move.getSource()).getNeutralPiece() - 1][move.getDest()]; //We start by hashing in the new move and the turn change
		if (game.getSquare(move.getDest()).getNeutralPiece()) {
			ret = ret ^ HASHKEYS::MASTERHASH[!color][game.getSquare(move.getDest()).getNeutralPiece() - 1][move.getDest()]; //hash out any dest piece
		}
		if (isQueenCastle) {
			ret = ((ret ^ HASHKEYS::MASTERHASH[color][R][multindex(move.getSourceRow(), 0)]) ^ MASTERHASH[color][R][multindex(move.getDestRow(), 3)]);
		}
		if (isKingCastle) {
			ret = ((ret ^ HASHKEYS::MASTERHASH[color][R][multindex(move.getSourceRow(), 7)]) ^ MASTERHASH[color][R][multindex(move.getDestRow(), 5)]);
		}
		for (size_t i = 0; i < 4; i++) {
			if (game.castlingEndtime(i) == game.moveN() && !game.castlingStill(i)) { //this means the castling rights are about to change, see Game::rewind(), OR the castling rights just changed, see Game::move()
				ret = ret ^ doneCastlingHash[i];
			}
		}
		return ret;
	}
}
